<!doctype html>
<html>
  <head>
    <title>Streams with bilby.js</title>
    <meta charset="utf-8" />
    <link href="http://netdna.bootstrapcdn.com/twitter-bootstrap/2.3.1/css/bootstrap-combined.min.css" rel="stylesheet">
    <script src="../dist/bilby.min.js"></script>
    <script>
      function event(element, name, callback) {
          if(element.addEventListener) {
              element.addEventListener(name, callback, false);
          } else {
              element.attachEvent('on' + name, callback);
          }
      }

      event(window, 'load', function() {
          var _ = bilby,
              createElement = _.curry(function(x) {
                  return document.createElement(x);
              }),
              createText = _.curry(function(x) {
                  return document.createTextNode(x);
              }),
              create = _.curry(function(x, y) {
                  var li = createElement(x);
                  li.appendChild(createText(y));
                  return li;
              }),
              li = create('li');

          function on(element, name) {
              return _.Stream.create(
                  function(handler) {
                      event(element, name, handler);
                      return function() {};
                  },
                  function() {
                      var args = [].slice.call(arguments);
                      return _.cont(function() {
                          return args;
                      });
                  }
              );
          }

          var sum = function(a, b) {
              return a + b;
          };

          on(document.getElementById('clicker-0'), 'click').map(function() {
              return 1;
          }).reduce(0, sum).forEach(function(x) {
              document.querySelector('#output-0 ul').appendChild(li(x));
          });

          var a = on(document.getElementById('clicker-1'), 'click').map(function() {
              return 1;
          });
          var b = on(document.getElementById('clicker-2'), 'click').map(function() {
              return 2;
          });

          a.merge(b).reduce(0, sum).forEach(function(x) {
              document.querySelector('#output-1 ul').appendChild(li(x));
          });

          var c = on(document.getElementById('clicker-3'), 'click').map(function() {
              return 1;
          });
          var d = on(document.getElementById('clicker-4'), 'click').map(function() {
              return 2;
          });

          // We should use Tuples here.
          c.zip(d).reduce([0, 0], function(a, b) {
              return [a[0] + b[0], a[1] + b[1]];
          }).forEach(function(x) {
              document.querySelector('#output-2 ul').appendChild(li(x));
          });
      });
    </script>
  </head>
  <body>
    <div class="container">
      <div class="row">
        <div class="span6 offset3">
          <h1>Streams Using <a href="http://bilby.brianmckenna.org/">bilby.js</a></h1>
          <h3>Reduce</h3>
          <form action="#">
              <fieldset>
                  <button id="clicker-0">Click Me!</button>
              </fieldset>
          </form>
          <div class="alert" id="output-0">
              <ul></ul>
          </div>
          <h3>Merge</h3>
          <form action="#">
              <fieldset>
                  <button id="clicker-1">Click Me!</button>
                  <button id="clicker-2">Click Me!</button>
              </fieldset>
          </form>
          <div class="alert" id="output-1">
              <ul></ul>
          </div>
          <h3>Zip</h3>
          <form action="#">
              <fieldset>
                  <button id="clicker-3">Click Me!</button>
                  <button id="clicker-4">Click Me!</button>
              </fieldset>
          </form>
          <div class="alert" id="output-2">
              <ul></ul>
          </div>
        </div>
      </div>
    </div>
  </body>
</html>
